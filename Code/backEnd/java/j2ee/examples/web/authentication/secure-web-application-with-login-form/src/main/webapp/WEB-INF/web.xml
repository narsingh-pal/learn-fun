<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<display-name>Spring MVC SECURED Hello World Application with login
		form
	</display-name>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>helloServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/helloServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>helloServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>


	<!-- The definition of the Root Spring Container shared by all Servlets 
		and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/spring-security.xml</param-value>
	</context-param>

	<!-- Spring Security Filter -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>




	<!-- ContextLoaderListener ties the ApplicationContext lifecycle to ServletContext 
		lifecycle and automate the creation of ApplicationContext. ApplicationContext 
		is the place for Spring beans and we can provide itâ€™s configuration through 
		contextConfigLocation context parameter. root-context.xml file provides the 
		configuration details for WebApplicationContext. DispatcherServlet is the 
		controller class for Spring MVC application and all the client requests is 
		getting handled by this servlet. The configuration are being loaded from 
		servlet-context.xml file. -->






	<!-- transport-guarantee can be CONFIDENTIAL, INTEGRAL, or NONE -->
	<!-- This (CONFIDENTIAL) causes a request for a protected resource on a 
		non-secure port to be redirected to a secure port. This allows us to authenticate 
		securely with HTTPS even if the initial request is to the HTTP port. -->
	<!-- <security-constraint> <web-resource-collection> <web-resource-name>Wildcard 
		means whole app requires authentication</web-resource-name> <url-pattern>/*</url-pattern> 
		<http-method>GET</http-method> <http-method>POST</http-method> </web-resource-collection> 
		<auth-constraint> <role-name>secure-app</role-name> </auth-constraint> <user-data-constraint> 
		<transport-guarantee>CONFIDENTIAL</transport-guarantee> </user-data-constraint> 
		</security-constraint> <login-config> <auth-method>FORM</auth-method> <form-login-config> 
		<form-login-page>/login.html</form-login-page> <form-error-page>/login-failed.html</form-error-page> 
		</form-login-config> </login-config> -->

</web-app>
